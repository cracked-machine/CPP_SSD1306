#ifndef __FONT5x7_HPP__
#define __FONT5x7_HPP__

#include <font.hpp>


namespace ssd1306
{

class Font5x7: public Font
{

public:

    // @brief Construct a new Font 5x 7 object
    // Passes font dimensions to base class
    Font5x7() : Font{5, 7}
    {}

    // @brief Get the char object
	// @param idx The position in the font data array to retrieve data
	// @return uint16_t The halfword of data we retrieve
    uint16_t get_char(size_t idx) override { return data.at(idx); }
    size_t size() override { return data.size(); }

private:


    std::array<uint16_t, 680> data {
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,  // sp
    0x1000, 0x1000, 0x0000, 0x1000, 0x0000,  // !
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,  // "
    0xFFFF, 0x5000, 0xFFFF, 0x5000, 0x0000,  // #
    0xA000, 0x7000, 0x2800, 0xF000, 0x2000,  // $
    0x1000, 0x2000, 0x4000, 0x8800, 0x0000,  // %
    0x5000, 0x2800, 0x5000, 0x5000, 0x2800,  // &
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,  // '
    0x1000, 0x4000, 0x4000, 0x4000, 0x1000,  // (
    0x4000, 0x1000, 0x1000, 0x1000, 0x4000,  // )
    0x7000, 0x2000, 0x7000, 0xA800, 0x2000,  // *
    0x0000, 0x2000, 0x7000, 0x2000, 0x0000,  // +
    0x0000, 0x0000, 0x2000, 0x2000, 0x4000,  // ,
    0x0000, 0x2000, 0x2000, 0x2000, 0x0000,  // -
    0x0000, 0x0000, 0x0000, 0x0000, 0x2000,  // .
    0x1000, 0x2000, 0x4000, 0x8000, 0x0000,  // /
    0x7000, 0x5000, 0x5000, 0x5000, 0x7000,  // 0
    0x2000, 0x6000, 0x2000, 0x2000, 0x7000,  // 1
    0x7000, 0x1000, 0x7000, 0x4000, 0x7000,  // 2
    0x7000, 0x1000, 0x7000, 0x1000, 0x7000,  // 3
    0x8000, 0x8000, 0xA000, 0xFFFF, 0xA000,  // 4
    0x7000, 0x4000, 0x7000, 0x1000, 0x7000,  // 5
    0x7000, 0x1000, 0x7000, 0x5000, 0x7000,  // 6
    0x7000, 0x1000, 0x3800, 0x1000, 0x1000,  // 7
    0x7000, 0x5000, 0x7000, 0x5000, 0x7000,  // 8
    0x7000, 0x5000, 0x7000, 0x1000, 0x1000,  // 9
    0x0000, 0x2000, 0x0000, 0x2000, 0x0000,  // :
    0x2000, 0x0000, 0x2000, 0x4000, 0x0000,  // ;
    0x4000, 0x8000, 0x4000, 0x2000, 0x1000,  // <
    0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000,  // =
    0x1000, 0x0800, 0x1000, 0x2000, 0x4000,  // >
    0x1000, 0x2000, 0x2000, 0x0000, 0x2000,  // ?
    0xB800, 0xA800, 0xB000, 0x8000, 0x7000,  // @
    0x2000, 0x5000, 0x7000, 0x5000, 0x5000,  // A
    0x6000, 0x5000, 0x7000, 0x5000, 0x6000,  // B
    0x7000, 0x4000, 0x4000, 0x4000, 0x7000,  // C
    0x6000, 0x5000, 0x5000, 0x5000, 0x6000,  // D
    0x7000, 0x4000, 0x7000, 0x4000, 0x7000,  // E
    0x8000, 0xE000, 0x8000, 0x8000, 0x8000,  // F
    0x7000, 0x4000, 0x5000, 0x5000, 0x7000,  // G
    0x5000, 0x5000, 0x7000, 0x5000, 0x5000,  // H
    0x2000, 0x2000, 0x2000, 0x2000, 0x2000,  // I
    0x1000, 0x1000, 0x5000, 0x5000, 0x2000,  // J
    0x5000, 0x6000, 0x4000, 0x6000, 0x5000,  // K
    0x4000, 0x4000, 0x4000, 0x4000, 0x7000,  // L
    0x8800, 0xD800, 0xA800, 0x8800, 0x8800,  // M
    0x7000, 0x5000, 0x5000, 0x5000, 0x5000,  // N
    0x7000, 0x5000, 0x5000, 0x5000, 0x7000,  // O
    0x7000, 0x5000, 0x7000, 0x4000, 0x4000,  // P
    0x8800, 0x8800, 0x8800, 0x7000, 0x1800,  // Q
    0x0000, 0x7000, 0x4000, 0x4000, 0x4000,  // R
    0x7000, 0x4000, 0x7000, 0x1000, 0x7000,  // S
    0x7000, 0x2000, 0x2000, 0x2000, 0x2000,  // T
    0x5000, 0x5000, 0x5000, 0x5000, 0x7000,  // U
    0x8800, 0x5000, 0x5000, 0x5000, 0x2000,  // V
    0x8800, 0x8800, 0xA800, 0xA800, 0x5000,  // W
    0x5000, 0x2000, 0x5000, 0x8800, 0x8800,  // X
    0x5000, 0x2000, 0x2000, 0x2000, 0x2000,  // Y
    0x7000, 0x1000, 0x2000, 0x4000, 0x7000,  // Z
    0x7000, 0x4000, 0x4000, 0x4000, 0x7000,  // [
    0x1000, 0x1000, 0x1000, 0x1000, 0x0800,  /* \ */
    0x7000, 0x1000, 0x1000, 0x1000, 0x7000,  // ]
    0x2800, 0x4400, 0x0000, 0x0000, 0x0000,  // ^
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // _
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000,  // `
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // a
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // b
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // c
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // d
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // e
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // f
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // g
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // h
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // i
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // j
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // k
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // l
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // m
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // n
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // o
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // p
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // q
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // r
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // s
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // t
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // u
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // v
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // w
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // x
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // y
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // z
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // {
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // |
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // }
    0x0000, 0x0000, 0x0000, 0x0000, 0x7000,  // ~
    };


};

}   // namespace ssd1306

#endif // __FONT3x5_HPP__
